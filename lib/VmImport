# ``````````````````````````````````````````````````````````````````````````````
# Function name: VmImport()
#
# Description:
#   Imports the virtual machine disks to any Proxmox VE node.
#
# Usage:
#   VmImport /path/to/local/disk
#
# Examples:
#   VmImport /xfs900/datastore/vmware/PROD-web01.img
#

function VmImport() {

  local _FUNCTION_ID="VmImport"
  local _STATE=0

  # shellcheck disable=SC2034
  _cmdtime_state=1

  local _fda="$1"

  _msg_args+=(\
  "checking: '${_fda}'")

  _cmd_args+=(\
  "eval if [[ ! -e ${_fda} ]] ; then exit 1 ; fi")

  # shellcheck disable=SC2154
  if [[ "$pve_format" == "raw" ]] ; then

    # shellcheck disable=SC2154
    if [[ "$pve_dst" == "dir" ]] ; then

      # shellcheck disable=SC2154
      local _vm_pv_local="${pv_path}/vm-${pve_id}-disk-${_x}.img"

    elif [[ "$pve_dst" == "lvm" ]] ; then

      # shellcheck disable=SC2154
      local _vm_pv_local="${pve_lvm}/vm-${pve_id}-disk-${_x}"

    fi

    # shellcheck disable=SC2154
    if [[ "$pve_host" == "local" ]] ; then

      if [[ "$pve_dst" == "dir" ]] ; then

        _msg_args+=(\
        "checking: '${_vm_pv_local}'" \
        "src: '${_fda}', dst path: '${_vm_pv_local}'")

        _cmd_args+=(\
        "eval if [[ ! -e ${_vm_pv_local} ]] ; then exit 1 ; fi" \
        "cp ${_fda} ${_vm_pv_local}")

      elif [[ "$pve_dst" == "lvm" ]] ; then

        _msg_args+=(\
        "checking: '${_vm_pv_local}'" \
        "src: '${_fda}', dst path: '${_vm_pv_local}'")

        _cmd_args+=(\
        "eval if [[ ! -e ${_vm_pv_local} ]] ; then exit 1 ; fi" \
        "dd if=${_fda} of=${_vm_pv_local} ${dd_opt}")

      fi

    elif [[ "$pve_host" != "local" ]] ; then

      if [[ "$pve_dst" == "dir" ]] ; then

        _msg_args+=(\
        "checking: '${pve_host}:${_vm_pv_local}'" \
        "src: '${_fda}'")

        _cmd_args+=(\
        "ssh ${ssh_opt} ${pve_host} -p ${port} if [[ ! -e \"${_vm_pv_local}\" ]] ; then exit 1 ; fi" \
        "scp ${ssh_opt} ${_fda} -P ${port} ${pve_host}:${_vm_pv_local}")

      elif [[ "$pve_dst" == "lvm" ]] ; then

        _msg_args+=(\
        "checking: '${pve_host}:${_vm_pv_local}'" \
        "src: '${_fda}', dst path: '${pve_host}:${_vm_pv_local}'")

        _cmd_args+=(\
        "ssh ${ssh_opt} ${pve_host} -p ${port} if [[ ! -e \"${_vm_pv_local}\" ]] ; then exit 1 ; fi" \
        "eval dd if=${_fda} ${dd_opt} | ssh ${ssh_opt} ${pve_host} -p ${port} dd of=${_vm_pv_local} ${dd_opt}")

      fi

    fi

    # shellcheck disable=SC2154
    if [[ "$remove_unused" == "yes" ]] ; then

      _msg_args+=(\
      "remove: '${_fda}'")

      _cmd_args+=(\
      "rm -fr ${_fda}")

    fi

  elif [[ "$pve_format" == "qcow2" ]] ; then

    if [[ "$pve_dst" == "dir" ]] ; then

      # shellcheck disable=SC2154
      local _vm_pv_local="${pv_path}/vm-${pve_id}-disk-${_x}.qcow2"

    elif [[ "$pve_dst" == "lvm" ]] ; then

      _sprintf "stop" "'qcow2' can not use with 'lvm'"

      _logger "stop" \
        "${_FUNCTION_ID}()" \
        "'qcow2' can not use with 'lvm'"

    fi

    if [[ "$pve_host" == "local" ]] ; then

      _msg_args+=(\
      "checking: '${_vm_pv_local}'" \
      "src: '${_fda}'")

      _cmd_args+=(\
      "eval if [[ ! -e ${_vm_pv_local} ]] ; then exit 1 ; fi" \
      "cp ${_fda} ${_vm_pv_local}")

    elif [[ "$pve_host" != "local" ]] ; then

      _msg_args+=(\
      "checking: '${pve_host}:${_vm_pv_local}'" \
      "src: '${_fda}'")

      _cmd_args+=(\
      "ssh ${ssh_opt} ${pve_host} -p ${port} if [[ ! -e \"${_vm_pv_local}\" ]] ; then exit 1 ; fi" \
      "scp ${ssh_opt} ${_fda} -P ${port} ${pve_host}:${_vm_pv_local}")

    fi

    if [[ "$remove_unused" == "yes" ]] ; then

      _msg_args+=(\
      "remove: '${_fda}'")

      _cmd_args+=(\
      "rm -fr ${_fda}")

    fi

  fi

  _x=$((_x + 1))

  return $_STATE

}
